module Shikensu.Definition exposing ( Definition, create, fork )

{-|

# Definition

@docs Definition, create, fork

-}

import Bytes exposing ( Bytes )
import Dict exposing ( Dict )
import FileSystem.Path exposing ( Path )
import Json.Encode as Json



-- ðŸ§©


{-| **A piece of content.**

Example definition, given:
The working directory root path `/Users/icidasset/Projects/shikensu/example/`
and the full item path `/Users/icidasset/Projects/shikensu/example/test/hello.md`

    { content = Nothing
    , path = FileSystem.Path.fromPosixString "test/hello.md"
    , metadata = Dict.empty
    }

-}
type alias Definition =
    { content : Maybe Bytes
    , path : Path
    , metadata : Dict String Json.Value
    }



-- ðŸ› 


{-| Create a definition, given a (relative) path.
In other words, the `root` property of a given path will always be ignored.
-}
create : Path -> Definition
create relPath =
    { content = Nothing
    , metadata = Dict.empty
    , path = { relPath | root = "" }
    }


{-| Fork a definition, given a relative path.
Taking the metadata and content of the original definition.
-}
fork : Path -> Definition -> Definition
fork relPath def =
    { content = def.content
    , metadata = def.metadata
    , path = relPath
    }
